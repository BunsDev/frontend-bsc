"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "src_utils_getTokenList_ts";
exports.ids = ["src_utils_getTokenList_ts"];
exports.modules = {

/***/ "./src/utils/ENS/parseENSAddress.ts":
/*!******************************************!*\
  !*** ./src/utils/ENS/parseENSAddress.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseENSAddress\": () => (/* binding */ parseENSAddress),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/;\nfunction parseENSAddress(ensAddress) {\n    const match = ensAddress.match(ENS_NAME_REGEX);\n    if (!match) return undefined;\n    return {\n        ensName: `${match[1].toLowerCase()}eth`,\n        ensPath: match[4]\n    };\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parseENSAddress);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvRU5TL3BhcnNlRU5TQWRkcmVzcy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLEtBQUssQ0FBQ0EsY0FBYztBQUViLFNBQVNDLGVBQWUsQ0FBQ0MsVUFBa0IsRUFBZ0UsQ0FBQztJQUNqSCxLQUFLLENBQUNDLEtBQUssR0FBR0QsVUFBVSxDQUFDQyxLQUFLLENBQUNILGNBQWM7SUFDN0MsRUFBRSxHQUFHRyxLQUFLLEVBQUUsTUFBTSxDQUFDQyxTQUFTO0lBQzVCLE1BQU0sQ0FBQyxDQUFDO1FBQUNDLE9BQU8sS0FBS0YsS0FBSyxDQUFDLENBQUMsRUFBRUcsV0FBVyxHQUFHLEdBQUc7UUFBR0MsT0FBTyxFQUFFSixLQUFLLENBQUMsQ0FBQztJQUFFLENBQUM7QUFDdkUsQ0FBQztBQUVELGlFQUFlRixlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhbXBhZ25lLWZyb250ZW5kLy4vc3JjL3V0aWxzL0VOUy9wYXJzZUVOU0FkZHJlc3MudHM/MmM5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBFTlNfTkFNRV9SRUdFWCA9IC9eKChbYS16QS1aMC05XSsoLVthLXpBLVowLTldKykqXFwuKSspZXRoKFxcLy4qKT8kL1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRU5TQWRkcmVzcyhlbnNBZGRyZXNzOiBzdHJpbmcpOiB7IGVuc05hbWU6IHN0cmluZzsgZW5zUGF0aDogc3RyaW5nIHwgdW5kZWZpbmVkIH0gfCB1bmRlZmluZWQge1xyXG4gIGNvbnN0IG1hdGNoID0gZW5zQWRkcmVzcy5tYXRjaChFTlNfTkFNRV9SRUdFWClcclxuICBpZiAoIW1hdGNoKSByZXR1cm4gdW5kZWZpbmVkXHJcbiAgcmV0dXJuIHsgZW5zTmFtZTogYCR7bWF0Y2hbMV0udG9Mb3dlckNhc2UoKX1ldGhgLCBlbnNQYXRoOiBtYXRjaFs0XSB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHBhcnNlRU5TQWRkcmVzc1xyXG4iXSwibmFtZXMiOlsiRU5TX05BTUVfUkVHRVgiLCJwYXJzZUVOU0FkZHJlc3MiLCJlbnNBZGRyZXNzIiwibWF0Y2giLCJ1bmRlZmluZWQiLCJlbnNOYW1lIiwidG9Mb3dlckNhc2UiLCJlbnNQYXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/ENS/parseENSAddress.ts\n");

/***/ }),

/***/ "./src/utils/contenthashToUri.ts":
/*!***************************************!*\
  !*** ./src/utils/contenthashToUri.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ contenthashToUri)\n/* harmony export */ });\n/* harmony import */ var cids__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cids */ \"cids\");\n/* harmony import */ var cids__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cids__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var multicodec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multicodec */ \"multicodec\");\n/* harmony import */ var multicodec__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(multicodec__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var multihashes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multihashes */ \"multihashes\");\n/* harmony import */ var multihashes__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(multihashes__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nfunction hexToUint8Array(hex) {\n    // eslint-disable-next-line no-param-reassign\n    hex = hex.startsWith('0x') ? hex.substr(2) : hex;\n    if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2');\n    const arr = new Uint8Array(hex.length / 2);\n    for(let i = 0; i < arr.length; i++){\n        arr[i] = parseInt(hex.substr(i * 2, 2), 16);\n    }\n    return arr;\n}\nconst UTF_8_DECODER = new TextDecoder();\n/**\r\n * Returns the URI representation of the content hash for supported codecs\r\n * @param contenthash to decode\r\n */ function contenthashToUri(contenthash) {\n    const buff = hexToUint8Array(contenthash);\n    const codec = (0,multicodec__WEBPACK_IMPORTED_MODULE_1__.getCodec)(buff) // the typing is wrong for @types/multicodec\n    ;\n    switch(codec){\n        case 'ipfs-ns':\n            {\n                const data = (0,multicodec__WEBPACK_IMPORTED_MODULE_1__.rmPrefix)(buff);\n                const cid = new (cids__WEBPACK_IMPORTED_MODULE_0___default())(data);\n                return `ipfs://${(0,multihashes__WEBPACK_IMPORTED_MODULE_2__.toB58String)(cid.multihash)}`;\n            }\n        case 'ipns-ns':\n            {\n                const data = (0,multicodec__WEBPACK_IMPORTED_MODULE_1__.rmPrefix)(buff);\n                const cid = new (cids__WEBPACK_IMPORTED_MODULE_0___default())(data);\n                const multihash = (0,multihashes__WEBPACK_IMPORTED_MODULE_2__.decode)(cid.multihash);\n                if (multihash.name === 'identity') {\n                    return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`;\n                }\n                return `ipns://${(0,multihashes__WEBPACK_IMPORTED_MODULE_2__.toB58String)(cid.multihash)}`;\n            }\n        default:\n            throw new Error(`Unrecognized codec: ${codec}`);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvY29udGVudGhhc2hUb1VyaS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXNCO0FBQ3lCO0FBQ0U7U0FFeENLLGVBQWUsQ0FBQ0MsR0FBVyxFQUFjLENBQUM7SUFDakQsRUFBNkM7SUFDN0NBLEdBQUcsR0FBR0EsR0FBRyxDQUFDQyxVQUFVLENBQUMsQ0FBSSxPQUFJRCxHQUFHLENBQUNFLE1BQU0sQ0FBQyxDQUFDLElBQUlGLEdBQUc7SUFDaEQsRUFBRSxFQUFFQSxHQUFHLENBQUNHLE1BQU0sR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssQ0FBQyxHQUFHLENBQUNDLEtBQUssQ0FBQyxDQUE0QztJQUN0RixLQUFLLENBQUNDLEdBQUcsR0FBRyxHQUFHLENBQUNDLFVBQVUsQ0FBQ04sR0FBRyxDQUFDRyxNQUFNLEdBQUcsQ0FBQztJQUN6QyxHQUFHLENBQUUsR0FBRyxDQUFDSSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdGLEdBQUcsQ0FBQ0YsTUFBTSxFQUFFSSxDQUFDLEdBQUksQ0FBQztRQUNwQ0YsR0FBRyxDQUFDRSxDQUFDLElBQUlDLFFBQVEsQ0FBQ1IsR0FBRyxDQUFDRSxNQUFNLENBQUNLLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUU7SUFDNUMsQ0FBQztJQUNELE1BQU0sQ0FBQ0YsR0FBRztBQUNaLENBQUM7QUFFRCxLQUFLLENBQUNJLGFBQWEsR0FBRyxHQUFHLENBQUNDLFdBQVc7QUFFckMsRUFHRztJQUVELEtBQUssQ0FBQ0csSUFBSSxHQUFHZCxlQUFlLENBQUNhLFdBQVc7SUFDeEMsS0FBSyxDQUFDRSxLQUFLLEdBQUduQixRQUFRLENBQUNrQixJQUFJLENBQVk7O0lBQ3ZDLE1BQU0sQ0FBRUMsS0FBSztRQUNYLElBQUksQ0FBQyxDQUFTOztnQkFDWjtnQkFDQSxLQUFLLENBQUNFOztZQUVSLENBQUM7UUFDRCxJQUFJLENBQUMsQ0FBUztZQUFFLENBQUM7O2dCQUVmLEtBQUssQ0FBQ0E7O2dCQUVOLEVBQUUsRUFBRUMsU0FBUyxvREFBSyxFQUFLLENBQVU7b0JBQy9CLE1BQU0sRUFBRSxpREFBTyxFQUFFUjtnQkFDbkIsQ0FBQztnQkFDRCxNQUFNLEVBQUUsT0FBTyxFQUFFWCxXQUFXLENBQUNrQixHQUFHLENBQUNDO1lBQ25DLENBQUM7O1lBRUMsS0FBSyxDQUFDLEdBQUcsQ0FBQ2IsS0FBSyxFQUFFLGlFQUFvQixFQUFFVSxLQUFLOztBQUVsRCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhbXBhZ25lLWZyb250ZW5kLy4vc3JjL3V0aWxzL2NvbnRlbnRoYXNoVG9VcmkudHM/NTY3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ0lEIGZyb20gJ2NpZHMnXHJcbmltcG9ydCB7IGdldENvZGVjLCBybVByZWZpeCB9IGZyb20gJ211bHRpY29kZWMnXHJcbmltcG9ydCB7IGRlY29kZSwgdG9CNThTdHJpbmcgfSBmcm9tICdtdWx0aWhhc2hlcydcclxuXHJcbmZ1bmN0aW9uIGhleFRvVWludDhBcnJheShoZXg6IHN0cmluZyk6IFVpbnQ4QXJyYXkge1xyXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxyXG4gIGhleCA9IGhleC5zdGFydHNXaXRoKCcweCcpID8gaGV4LnN1YnN0cigyKSA6IGhleFxyXG4gIGlmIChoZXgubGVuZ3RoICUgMiAhPT0gMCkgdGhyb3cgbmV3IEVycm9yKCdoZXggbXVzdCBoYXZlIGxlbmd0aCB0aGF0IGlzIG11bHRpcGxlIG9mIDInKVxyXG4gIGNvbnN0IGFyciA9IG5ldyBVaW50OEFycmF5KGhleC5sZW5ndGggLyAyKVxyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBhcnJbaV0gPSBwYXJzZUludChoZXguc3Vic3RyKGkgKiAyLCAyKSwgMTYpXHJcbiAgfVxyXG4gIHJldHVybiBhcnJcclxufVxyXG5cclxuY29uc3QgVVRGXzhfREVDT0RFUiA9IG5ldyBUZXh0RGVjb2RlcigpXHJcblxyXG4vKipcclxuICogUmV0dXJucyB0aGUgVVJJIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBjb250ZW50IGhhc2ggZm9yIHN1cHBvcnRlZCBjb2RlY3NcclxuICogQHBhcmFtIGNvbnRlbnRoYXNoIHRvIGRlY29kZVxyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29udGVudGhhc2hUb1VyaShjb250ZW50aGFzaDogc3RyaW5nKTogc3RyaW5nIHtcclxuICBjb25zdCBidWZmID0gaGV4VG9VaW50OEFycmF5KGNvbnRlbnRoYXNoKVxyXG4gIGNvbnN0IGNvZGVjID0gZ2V0Q29kZWMoYnVmZiBhcyBCdWZmZXIpIC8vIHRoZSB0eXBpbmcgaXMgd3JvbmcgZm9yIEB0eXBlcy9tdWx0aWNvZGVjXHJcbiAgc3dpdGNoIChjb2RlYykge1xyXG4gICAgY2FzZSAnaXBmcy1ucyc6IHtcclxuICAgICAgY29uc3QgZGF0YSA9IHJtUHJlZml4KGJ1ZmYgYXMgQnVmZmVyKVxyXG4gICAgICBjb25zdCBjaWQgPSBuZXcgQ0lEKGRhdGEpXHJcbiAgICAgIHJldHVybiBgaXBmczovLyR7dG9CNThTdHJpbmcoY2lkLm11bHRpaGFzaCl9YFxyXG4gICAgfVxyXG4gICAgY2FzZSAnaXBucy1ucyc6IHtcclxuICAgICAgY29uc3QgZGF0YSA9IHJtUHJlZml4KGJ1ZmYgYXMgQnVmZmVyKVxyXG4gICAgICBjb25zdCBjaWQgPSBuZXcgQ0lEKGRhdGEpXHJcbiAgICAgIGNvbnN0IG11bHRpaGFzaCA9IGRlY29kZShjaWQubXVsdGloYXNoKVxyXG4gICAgICBpZiAobXVsdGloYXNoLm5hbWUgPT09ICdpZGVudGl0eScpIHtcclxuICAgICAgICByZXR1cm4gYGlwbnM6Ly8ke1VURl84X0RFQ09ERVIuZGVjb2RlKG11bHRpaGFzaC5kaWdlc3QpLnRyaW0oKX1gXHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGBpcG5zOi8vJHt0b0I1OFN0cmluZyhjaWQubXVsdGloYXNoKX1gXHJcbiAgICB9XHJcbiAgICBkZWZhdWx0OlxyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFVucmVjb2duaXplZCBjb2RlYzogJHtjb2RlY31gKVxyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiQ0lEIiwiZ2V0Q29kZWMiLCJybVByZWZpeCIsImRlY29kZSIsInRvQjU4U3RyaW5nIiwiaGV4VG9VaW50OEFycmF5IiwiaGV4Iiwic3RhcnRzV2l0aCIsInN1YnN0ciIsImxlbmd0aCIsIkVycm9yIiwiYXJyIiwiVWludDhBcnJheSIsImkiLCJwYXJzZUludCIsIlVURl84X0RFQ09ERVIiLCJUZXh0RGVjb2RlciIsImNvbnRlbnRoYXNoVG9VcmkiLCJjb250ZW50aGFzaCIsImJ1ZmYiLCJjb2RlYyIsImRhdGEiLCJjaWQiLCJtdWx0aWhhc2giLCJuYW1lIiwiZGlnZXN0IiwidHJpbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/contenthashToUri.ts\n");

/***/ }),

/***/ "./src/utils/getTokenList.ts":
/*!***********************************!*\
  !*** ./src/utils/getTokenList.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getTokenList)\n/* harmony export */ });\n/* harmony import */ var _uniswap_token_lists_src_tokenlist_schema_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @uniswap/token-lists/src/tokenlist.schema.json */ \"./node_modules/@uniswap/token-lists/src/tokenlist.schema.json\");\n/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ajv */ \"ajv\");\n/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ajv__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _contenthashToUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contenthashToUri */ \"./src/utils/contenthashToUri.ts\");\n/* harmony import */ var _ENS_parseENSAddress__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ENS/parseENSAddress */ \"./src/utils/ENS/parseENSAddress.ts\");\n/* harmony import */ var _uriToHttp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./uriToHttp */ \"./src/utils/uriToHttp.ts\");\n\n\n\n\n\nconst tokenListValidator = new (ajv__WEBPACK_IMPORTED_MODULE_1___default())({\n    allErrors: true\n}).compile(_uniswap_token_lists_src_tokenlist_schema_json__WEBPACK_IMPORTED_MODULE_0__);\n/**\r\n * Contains the logic for resolving a list URL to a validated token list\r\n * @param listUrl list url\r\n * @param resolveENSContentHash resolves an ens name to a contenthash\r\n */ async function getTokenList(listUrl, resolveENSContentHash) {\n    const parsedENS = (0,_ENS_parseENSAddress__WEBPACK_IMPORTED_MODULE_3__.parseENSAddress)(listUrl);\n    let urls;\n    if (parsedENS) {\n        let contentHashUri;\n        try {\n            contentHashUri = await resolveENSContentHash(parsedENS.ensName);\n        } catch (error) {\n            console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error);\n            throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`);\n        }\n        let translatedUri;\n        try {\n            translatedUri = (0,_contenthashToUri__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(contentHashUri);\n        } catch (error1) {\n            console.error('Failed to translate contenthash to URI', contentHashUri);\n            throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`);\n        }\n        var _ensPath;\n        urls = (0,_uriToHttp__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(`${translatedUri}${(_ensPath = parsedENS.ensPath) !== null && _ensPath !== void 0 ? _ensPath : ''}`);\n    } else {\n        urls = (0,_uriToHttp__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(listUrl);\n    }\n    for(let i = 0; i < urls.length; i++){\n        const url = urls[i];\n        const isLast = i === urls.length - 1;\n        let response;\n        try {\n            response = await fetch(url);\n        } catch (error2) {\n            console.error('Failed to fetch list', listUrl, error2);\n            if (isLast) throw new Error(`Failed to download list ${listUrl}`);\n            continue;\n        }\n        if (!response.ok) {\n            if (isLast) throw new Error(`Failed to download list ${listUrl}`);\n            continue;\n        }\n        const json = await response.json();\n        if (!tokenListValidator(json)) {\n            var ref;\n            var ref1;\n            const validationErrors = (ref1 = (ref = tokenListValidator.errors) === null || ref === void 0 ? void 0 : ref.reduce((memo, error)=>{\n                var _message;\n                const add = `${error.dataPath} ${(_message = error.message) !== null && _message !== void 0 ? _message : ''}`;\n                return memo.length > 0 ? `${memo}; ${add}` : `${add}`;\n            }, '')) !== null && ref1 !== void 0 ? ref1 : 'unknown error';\n            throw new Error(`Token list failed validation: ${validationErrors}`);\n        }\n        return json;\n    }\n    throw new Error('Unrecognized list URL protocol.');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvZ2V0VG9rZW5MaXN0LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFHbUU7QUFDOUM7QUFDNEI7QUFDTTtBQUNwQjtBQUVuQyxLQUFLLENBQUNLLGtCQUFrQixHQUFHLEdBQUcsQ0FBQ0osNENBQUcsQ0FBQyxDQUFDO0lBQUNLLFNBQVMsRUFBRSxJQUFJO0FBQUMsQ0FBQyxFQUFFQyxPQUFPLENBQUNQLDJFQUFNO0FBRXRFLEVBSUc7SUFLRCxLQUFLLENBQUNXLFNBQVMsR0FBR1IsZUFBZSxDQUFDTSxPQUFPO0lBQ3pDLEdBQUcsQ0FBQ0csSUFBSTtJQUNSLEVBQUUsRUFBRUQsU0FBUyxFQUFFLENBQUM7SUFDVkUsT0FBYztRQUNsQixHQUFHLENBQUMsQ0FBQztZQUNIQTtRQUNGLENBQUMsQ0FBQyxLQUFLLEVBQUVFO1lBQ1BDLE9BQU8sQ0FBQ0QsS0FBSyxFQUFFO1lBQ2Y7UUFDRixDQUFDO1FBQ0QsR0FBRyxDQUFDRyxhQUFhO1FBQ2pCLEdBQUcsQ0FBQyxDQUFDO1lBQ0hBLGFBQWEsR0FBR2hCLGdCQUFnQixDQUFDVyxjQUFjO1FBQ2pELENBQUM7WUFDQ0csT0FBTyxDQUFDRCxLQUFLLENBQUM7WUFDZDtRQUNGLENBQUM7WUFDbUNKLFFBQWlCO1FBQXJEQyxJQUFJLEdBQUdSLFNBQVMsSUFBSWMsYUFBYSxJQUFHUCxRQUFpQixHQUFqQkEsU0FBUyxDQUFDUSxPQUFPO0lBQ3ZELENBQUMsTUFBTSxDQUFDO1FBQ05QO0lBQ0YsQ0FBQztJQUNELEdBQUcsQ0FBRSxHQUFHLENBQUNRLENBQUMsd0RBQVVSLEdBQUksQ0FBQ1MsTUFBTSxFQUFFRCxDQUFDLEdBQUksQ0FBQztRQUNyQztRQUNBLEtBQUssQ0FBQ0csQ0FBQUEsc0RBQVUsS0FBS1gsSUFBSSxDQUFDUzs7UUFFMUIsR0FBRyxDQUFDLENBQUM7WUFDSEcsUUFBUSxHQUFHLEtBQUs7UUFDbEIsQ0FBQyxDQUFDLEtBQUssRUFBRVQsTUFBSyxFQUFFLENBQUM7WUFDZkMsT0FBTyxDQUFDRDtZQUNSO1lBQ0EsUUFBUTtRQUNWLENBQUM7UUFFRCxFQUFFLEdBQUdTLFFBQVEsQ0FBQ0UsRUFBRSxFQUFFLENBQUM7WUFDakIsRUFBRSxFQUFFSCxNQUFNLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQ04sS0FBSyxFQUFFLHdCQUF3QixFQUFFUixPQUFPO1lBQzlELFFBQVE7UUFDVixDQUFDO1FBRUQsS0FBSyxDQUFDa0IsSUFBSSxHQUFHLEtBQUssQ0FBQ0g7UUFDbkIsRUFBRSxHQUFHbkIsa0JBQWtCLENBQUNzQixJQUFJLEdBQUcsQ0FBQztnQkFFNUJ0QixHQUF5Qjs7WUFEM0IsS0FBSyxDQUFDdUIsZ0JBQWdCLElBQ3BCdkIsSUFHTTtvQkFGc0NVLFFBQWE7Z0JBQXZEO2dCQUNBO1lBQ0YsQ0FBQyxFQUFFLENBQUUsZ0JBSExWLElBR00sY0FITkEsSUFHTSxHQUFJLENBQWU7WUFDM0IsS0FBSyxDQUFDLEdBQUcsQ0FBQ1ksS0FBSyxFQUFFO1FBQ25CLENBQUM7UUFDRCxNQUFNLENBQUNVLElBQUk7SUFDYixDQUFDO0lBQ0QsS0FBSyxDQUFDLEdBQUcsQ0FBQ1YsS0FBSyxDQUFDLENBQWlDO0FBQ25ELENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGFtcGFnbmUtZnJvbnRlbmQvLi9zcmMvdXRpbHMvZ2V0VG9rZW5MaXN0LnRzPzdiNDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tY29udGludWUgKi9cclxuLyogZXNsaW50LWRpc2FibGUgbm8tYXdhaXQtaW4tbG9vcCAqL1xyXG5pbXBvcnQgeyBUb2tlbkxpc3QgfSBmcm9tICdAdW5pc3dhcC90b2tlbi1saXN0cydcclxuaW1wb3J0IHNjaGVtYSBmcm9tICdAdW5pc3dhcC90b2tlbi1saXN0cy9zcmMvdG9rZW5saXN0LnNjaGVtYS5qc29uJ1xyXG5pbXBvcnQgQWp2IGZyb20gJ2FqdidcclxuaW1wb3J0IGNvbnRlbnRoYXNoVG9VcmkgZnJvbSAnLi9jb250ZW50aGFzaFRvVXJpJ1xyXG5pbXBvcnQgeyBwYXJzZUVOU0FkZHJlc3MgfSBmcm9tICcuL0VOUy9wYXJzZUVOU0FkZHJlc3MnXHJcbmltcG9ydCB1cmlUb0h0dHAgZnJvbSAnLi91cmlUb0h0dHAnXHJcblxyXG5jb25zdCB0b2tlbkxpc3RWYWxpZGF0b3IgPSBuZXcgQWp2KHsgYWxsRXJyb3JzOiB0cnVlIH0pLmNvbXBpbGUoc2NoZW1hKVxyXG5cclxuLyoqXHJcbiAqIENvbnRhaW5zIHRoZSBsb2dpYyBmb3IgcmVzb2x2aW5nIGEgbGlzdCBVUkwgdG8gYSB2YWxpZGF0ZWQgdG9rZW4gbGlzdFxyXG4gKiBAcGFyYW0gbGlzdFVybCBsaXN0IHVybFxyXG4gKiBAcGFyYW0gcmVzb2x2ZUVOU0NvbnRlbnRIYXNoIHJlc29sdmVzIGFuIGVucyBuYW1lIHRvIGEgY29udGVudGhhc2hcclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGdldFRva2VuTGlzdChcclxuICBsaXN0VXJsOiBzdHJpbmcsXHJcbiAgcmVzb2x2ZUVOU0NvbnRlbnRIYXNoOiAoZW5zTmFtZTogc3RyaW5nKSA9PiBQcm9taXNlPHN0cmluZz4sXHJcbik6IFByb21pc2U8VG9rZW5MaXN0PiB7XHJcbiAgY29uc3QgcGFyc2VkRU5TID0gcGFyc2VFTlNBZGRyZXNzKGxpc3RVcmwpXHJcbiAgbGV0IHVybHM6IHN0cmluZ1tdXHJcbiAgaWYgKHBhcnNlZEVOUykge1xyXG4gICAgbGV0IGNvbnRlbnRIYXNoVXJpXHJcbiAgICB0cnkge1xyXG4gICAgICBjb250ZW50SGFzaFVyaSA9IGF3YWl0IHJlc29sdmVFTlNDb250ZW50SGFzaChwYXJzZWRFTlMuZW5zTmFtZSlcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoYEZhaWxlZCB0byByZXNvbHZlIEVOUyBuYW1lOiAke3BhcnNlZEVOUy5lbnNOYW1lfWAsIGVycm9yKVxyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byByZXNvbHZlIEVOUyBuYW1lOiAke3BhcnNlZEVOUy5lbnNOYW1lfWApXHJcbiAgICB9XHJcbiAgICBsZXQgdHJhbnNsYXRlZFVyaVxyXG4gICAgdHJ5IHtcclxuICAgICAgdHJhbnNsYXRlZFVyaSA9IGNvbnRlbnRoYXNoVG9VcmkoY29udGVudEhhc2hVcmkpXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gdHJhbnNsYXRlIGNvbnRlbnRoYXNoIHRvIFVSSScsIGNvbnRlbnRIYXNoVXJpKVxyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byB0cmFuc2xhdGUgY29udGVudGhhc2ggdG8gVVJJOiAke2NvbnRlbnRIYXNoVXJpfWApXHJcbiAgICB9XHJcbiAgICB1cmxzID0gdXJpVG9IdHRwKGAke3RyYW5zbGF0ZWRVcml9JHtwYXJzZWRFTlMuZW5zUGF0aCA/PyAnJ31gKVxyXG4gIH0gZWxzZSB7XHJcbiAgICB1cmxzID0gdXJpVG9IdHRwKGxpc3RVcmwpXHJcbiAgfVxyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdXJscy5sZW5ndGg7IGkrKykge1xyXG4gICAgY29uc3QgdXJsID0gdXJsc1tpXVxyXG4gICAgY29uc3QgaXNMYXN0ID0gaSA9PT0gdXJscy5sZW5ndGggLSAxXHJcbiAgICBsZXQgcmVzcG9uc2VcclxuICAgIHRyeSB7XHJcbiAgICAgIHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGZldGNoIGxpc3QnLCBsaXN0VXJsLCBlcnJvcilcclxuICAgICAgaWYgKGlzTGFzdCkgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZG93bmxvYWQgbGlzdCAke2xpc3RVcmx9YClcclxuICAgICAgY29udGludWVcclxuICAgIH1cclxuXHJcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgIGlmIChpc0xhc3QpIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGRvd25sb2FkIGxpc3QgJHtsaXN0VXJsfWApXHJcbiAgICAgIGNvbnRpbnVlXHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QganNvbiA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxyXG4gICAgaWYgKCF0b2tlbkxpc3RWYWxpZGF0b3IoanNvbikpIHtcclxuICAgICAgY29uc3QgdmFsaWRhdGlvbkVycm9yczogc3RyaW5nID1cclxuICAgICAgICB0b2tlbkxpc3RWYWxpZGF0b3IuZXJyb3JzPy5yZWR1Y2U8c3RyaW5nPigobWVtbywgZXJyb3IpID0+IHtcclxuICAgICAgICAgIGNvbnN0IGFkZCA9IGAkeyhlcnJvciBhcyBhbnkpLmRhdGFQYXRofSAke2Vycm9yLm1lc3NhZ2UgPz8gJyd9YFxyXG4gICAgICAgICAgcmV0dXJuIG1lbW8ubGVuZ3RoID4gMCA/IGAke21lbW99OyAke2FkZH1gIDogYCR7YWRkfWBcclxuICAgICAgICB9LCAnJykgPz8gJ3Vua25vd24gZXJyb3InXHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVG9rZW4gbGlzdCBmYWlsZWQgdmFsaWRhdGlvbjogJHt2YWxpZGF0aW9uRXJyb3JzfWApXHJcbiAgICB9XHJcbiAgICByZXR1cm4ganNvbiBhcyBUb2tlbkxpc3RcclxuICB9XHJcbiAgdGhyb3cgbmV3IEVycm9yKCdVbnJlY29nbml6ZWQgbGlzdCBVUkwgcHJvdG9jb2wuJylcclxufVxyXG4iXSwibmFtZXMiOlsic2NoZW1hIiwiQWp2IiwiY29udGVudGhhc2hUb1VyaSIsInBhcnNlRU5TQWRkcmVzcyIsInVyaVRvSHR0cCIsInRva2VuTGlzdFZhbGlkYXRvciIsImFsbEVycm9ycyIsImNvbXBpbGUiLCJnZXRUb2tlbkxpc3QiLCJsaXN0VXJsIiwicmVzb2x2ZUVOU0NvbnRlbnRIYXNoIiwicGFyc2VkRU5TIiwidXJscyIsImNvbnRlbnRIYXNoVXJpIiwiZW5zTmFtZSIsImVycm9yIiwiY29uc29sZSIsIkVycm9yIiwidHJhbnNsYXRlZFVyaSIsImVuc1BhdGgiLCJpIiwibGVuZ3RoIiwidXJsIiwiaXNMYXN0IiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwianNvbiIsInZhbGlkYXRpb25FcnJvcnMiLCJlcnJvcnMiLCJyZWR1Y2UiLCJtZW1vIiwiYWRkIiwiZGF0YVBhdGgiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/getTokenList.ts\n");

/***/ }),

/***/ "./src/utils/uriToHttp.ts":
/*!********************************!*\
  !*** ./src/utils/uriToHttp.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ uriToHttp)\n/* harmony export */ });\n/* eslint-disable no-case-declarations */ /**\r\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\r\n * @param uri to convert to fetch-able http url\r\n */ function uriToHttp(uri) {\n    const protocol = uri.split(':')[0].toLowerCase();\n    switch(protocol){\n        case 'https':\n            return [\n                uri\n            ];\n        case 'http':\n            return [\n                `https${uri.substr(4)}`,\n                uri\n            ];\n        case 'ipfs':\n            var ref;\n            const hash = (ref = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)) === null || ref === void 0 ? void 0 : ref[2];\n            return [\n                `https://cloudflare-ipfs.com/ipfs/${hash}/`,\n                `https://ipfs.io/ipfs/${hash}/`\n            ];\n        case 'ipns':\n            var ref1;\n            const name = (ref1 = uri.match(/^ipns:(\\/\\/)?(.*)$/i)) === null || ref1 === void 0 ? void 0 : ref1[2];\n            return [\n                `https://cloudflare-ipfs.com/ipns/${name}/`,\n                `https://ipfs.io/ipns/${name}/`\n            ];\n        default:\n            return [];\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvdXJpVG9IdHRwLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxFQUF5Qyx3Q0FDekMsRUFHRztJQUVELEtBQUssQ0FBQ0UsUUFBUSxHQUFHRCxHQUFHLENBQUNFLEtBQUssQ0FBQyxDQUFHLElBQUUsQ0FBQyxFQUFFQyxXQUFXO0lBQzlDLE1BQU0sQ0FBRUYsUUFBUTtJQUNGO1lBQ1YsTUFBTSxDQUFDLENBQUNEO2dCQUFBQSxHQUFHO1lBQUEsQ0FBQztRQUNkLElBQUksQ0FBQyxDQUFNO1lBQ1QsTUFBTSxDQUFDOztnQkFBMEJBLEdBQUc7WUFBQSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxDQUFNO2dCQUNJQSxHQUFnQztZQUE3QztZQUNBLE1BQU0sQ0FBQyxDQUFDO2lCQUFDO2lCQUE2QyxxQkFBcUIsRUFBRUssSUFBSSxDQUFDLENBQUM7WUFBQyxDQUFDO1FBQ3ZGLElBQUksQ0FBQyxDQUFNO2dCQUNJTCxJQUFnQztZQUE3QztZQUNBLE1BQU0sQ0FBQyxDQUFDO2lCQUFDO2lCQUE2QyxxQkFBcUIsRUFBRU8sSUFBSSxDQUFDLENBQUM7WUFBQyxDQUFDOztZQUVyRixNQUFNLENBQUMsQ0FBQyxDQUFDOztBQUVmLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGFtcGFnbmUtZnJvbnRlbmQvLi9zcmMvdXRpbHMvdXJpVG9IdHRwLnRzP2Q2NGQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tY2FzZS1kZWNsYXJhdGlvbnMgKi9cclxuLyoqXHJcbiAqIEdpdmVuIGEgVVJJIHRoYXQgbWF5IGJlIGlwZnMsIGlwbnMsIGh0dHAsIG9yIGh0dHBzIHByb3RvY29sLCByZXR1cm4gdGhlIGZldGNoLWFibGUgaHR0cChzKSBVUkxzIGZvciB0aGUgc2FtZSBjb250ZW50XHJcbiAqIEBwYXJhbSB1cmkgdG8gY29udmVydCB0byBmZXRjaC1hYmxlIGh0dHAgdXJsXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1cmlUb0h0dHAodXJpOiBzdHJpbmcpOiBzdHJpbmdbXSB7XHJcbiAgY29uc3QgcHJvdG9jb2wgPSB1cmkuc3BsaXQoJzonKVswXS50b0xvd2VyQ2FzZSgpXHJcbiAgc3dpdGNoIChwcm90b2NvbCkge1xyXG4gICAgY2FzZSAnaHR0cHMnOlxyXG4gICAgICByZXR1cm4gW3VyaV1cclxuICAgIGNhc2UgJ2h0dHAnOlxyXG4gICAgICByZXR1cm4gW2BodHRwcyR7dXJpLnN1YnN0cig0KX1gLCB1cmldXHJcbiAgICBjYXNlICdpcGZzJzpcclxuICAgICAgY29uc3QgaGFzaCA9IHVyaS5tYXRjaCgvXmlwZnM6KFxcL1xcLyk/KC4qKSQvaSk/LlsyXVxyXG4gICAgICByZXR1cm4gW2BodHRwczovL2Nsb3VkZmxhcmUtaXBmcy5jb20vaXBmcy8ke2hhc2h9L2AsIGBodHRwczovL2lwZnMuaW8vaXBmcy8ke2hhc2h9L2BdXHJcbiAgICBjYXNlICdpcG5zJzpcclxuICAgICAgY29uc3QgbmFtZSA9IHVyaS5tYXRjaCgvXmlwbnM6KFxcL1xcLyk/KC4qKSQvaSk/LlsyXVxyXG4gICAgICByZXR1cm4gW2BodHRwczovL2Nsb3VkZmxhcmUtaXBmcy5jb20vaXBucy8ke25hbWV9L2AsIGBodHRwczovL2lwZnMuaW8vaXBucy8ke25hbWV9L2BdXHJcbiAgICBkZWZhdWx0OlxyXG4gICAgICByZXR1cm4gW11cclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbInVyaVRvSHR0cCIsInVyaSIsInByb3RvY29sIiwic3BsaXQiLCJ0b0xvd2VyQ2FzZSIsInN1YnN0ciIsImhhc2giLCJtYXRjaCIsIm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/uriToHttp.ts\n");

/***/ }),

/***/ "./node_modules/@uniswap/token-lists/src/tokenlist.schema.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@uniswap/token-lists/src/tokenlist.schema.json ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","$id":"https://uniswap.org/tokenlist.schema.json","title":"Uniswap Token List","description":"Schema for lists of tokens compatible with the Uniswap Interface","definitions":{"Version":{"type":"object","description":"The version of the list, used in change detection","examples":[{"major":1,"minor":0,"patch":0}],"additionalProperties":false,"properties":{"major":{"type":"integer","description":"The major version of the list. Must be incremented when tokens are removed from the list or token addresses are changed.","minimum":0,"examples":[1,2]},"minor":{"type":"integer","description":"The minor version of the list. Must be incremented when tokens are added to the list.","minimum":0,"examples":[0,1]},"patch":{"type":"integer","description":"The patch version of the list. Must be incremented for any changes to the list.","minimum":0,"examples":[0,1]}},"required":["major","minor","patch"]},"TagIdentifier":{"type":"string","description":"The unique identifier of a tag","minLength":1,"maxLength":10,"pattern":"^[\\\\w]+$","examples":["compound","stablecoin"]},"ExtensionIdentifier":{"type":"string","description":"The name of a token extension property","minLength":1,"maxLength":40,"pattern":"^[\\\\w]+$","examples":["color","is_fee_on_transfer","aliases"]},"ExtensionMap":{"type":"object","description":"An object containing any arbitrary or vendor-specific token metadata","maxProperties":10,"propertyNames":{"$ref":"#/definitions/ExtensionIdentifier"},"additionalProperties":{"$ref":"#/definitions/ExtensionValue"},"examples":[{"color":"#000000","is_verified_by_me":true},{"x-bridged-addresses-by-chain":{"1":{"bridgeAddress":"0x4200000000000000000000000000000000000010","tokenAddress":"0x4200000000000000000000000000000000000010"}}}]},"ExtensionPrimitiveValue":{"anyOf":[{"type":"string","minLength":1,"maxLength":42,"examples":["#00000"]},{"type":"boolean","examples":[true]},{"type":"number","examples":[15]},{"type":"null"}]},"ExtensionValue":{"anyOf":[{"$ref":"#/definitions/ExtensionPrimitiveValue"},{"type":"object","maxProperties":10,"propertyNames":{"$ref":"#/definitions/ExtensionIdentifier"},"additionalProperties":{"$ref":"#/definitions/ExtensionValueInner0"}}]},"ExtensionValueInner0":{"anyOf":[{"$ref":"#/definitions/ExtensionPrimitiveValue"},{"type":"object","maxProperties":10,"propertyNames":{"$ref":"#/definitions/ExtensionIdentifier"},"additionalProperties":{"$ref":"#/definitions/ExtensionValueInner1"}}]},"ExtensionValueInner1":{"anyOf":[{"$ref":"#/definitions/ExtensionPrimitiveValue"}]},"TagDefinition":{"type":"object","description":"Definition of a tag that can be associated with a token via its identifier","additionalProperties":false,"properties":{"name":{"type":"string","description":"The name of the tag","pattern":"^[ \\\\w]+$","minLength":1,"maxLength":20},"description":{"type":"string","description":"A user-friendly description of the tag","pattern":"^[ \\\\w\\\\.,:]+$","minLength":1,"maxLength":200}},"required":["name","description"],"examples":[{"name":"Stablecoin","description":"A token with value pegged to another asset"}]},"TokenInfo":{"type":"object","description":"Metadata for a single token in a token list","additionalProperties":false,"properties":{"chainId":{"type":"integer","description":"The chain ID of the Ethereum network where this token is deployed","minimum":1,"examples":[1,42]},"address":{"type":"string","description":"The checksummed address of the token on the specified chain ID","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"]},"decimals":{"type":"integer","description":"The number of decimals for the token balance","minimum":0,"maximum":255,"examples":[18]},"name":{"type":"string","description":"The name of the token","minLength":1,"maxLength":40,"pattern":"^[ \\\\w.\'+\\\\-%/À-ÖØ-öø-ÿ:&\\\\[\\\\]\\\\(\\\\)]+$","examples":["USD Coin"]},"symbol":{"type":"string","description":"The symbol for the token; must be alphanumeric","pattern":"^[a-zA-Z0-9+\\\\-%/$.]+$","minLength":1,"maxLength":20,"examples":["USDC"]},"logoURI":{"type":"string","description":"A URI to the token logo asset; if not set, interface will attempt to find a logo based on the token address; suggest SVG or PNG of size 64x64","format":"uri","examples":["ipfs://QmXfzKRvjZz3u5JRgC4v5mGVbm9ahrUiB4DgzHBsnWbTMM"]},"tags":{"type":"array","description":"An array of tag identifiers associated with the token; tags are defined at the list level","items":{"$ref":"#/definitions/TagIdentifier"},"maxItems":10,"examples":["stablecoin","compound"]},"extensions":{"$ref":"#/definitions/ExtensionMap"}},"required":["chainId","address","decimals","name","symbol"]}},"type":"object","additionalProperties":false,"properties":{"name":{"type":"string","description":"The name of the token list","minLength":1,"maxLength":20,"pattern":"^[\\\\w ]+$","examples":["My Token List"]},"timestamp":{"type":"string","format":"date-time","description":"The timestamp of this list version; i.e. when this immutable version of the list was created"},"version":{"$ref":"#/definitions/Version"},"tokens":{"type":"array","description":"The list of tokens included in the list","items":{"$ref":"#/definitions/TokenInfo"},"minItems":1,"maxItems":10000},"keywords":{"type":"array","description":"Keywords associated with the contents of the list; may be used in list discoverability","items":{"type":"string","description":"A keyword to describe the contents of the list","minLength":1,"maxLength":20,"pattern":"^[\\\\w ]+$","examples":["compound","lending","personal tokens"]},"maxItems":20,"uniqueItems":true},"tags":{"type":"object","description":"A mapping of tag identifiers to their name and description","propertyNames":{"$ref":"#/definitions/TagIdentifier"},"additionalProperties":{"$ref":"#/definitions/TagDefinition"},"maxProperties":20,"examples":[{"stablecoin":{"name":"Stablecoin","description":"A token with value pegged to another asset"}}]},"logoURI":{"type":"string","description":"A URI for the logo of the token list; prefer SVG or PNG of size 256x256","format":"uri","examples":["ipfs://QmXfzKRvjZz3u5JRgC4v5mGVbm9ahrUiB4DgzHBsnWbTMM"]}},"required":["name","timestamp","version","tokens"]}');

/***/ })

};
;